<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">

    <persistence-unit name="jpabook">
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.mariadb.jdbc.Driver" />
            <property name="javax.persistence.jdbc.user" value="ezEKP2017" />
            <property name="javax.persistence.jdbc.password" value="ezflow_010" />
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:mariadb://192.168.56.101:3306/jmocha?useSSL=false" />
            <property name="hibernate.dialeect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
            <!--<property name="hibernate.dialeect" value="org.hibernate.dialect.Oracle10gDialect" />-->

            <!-- option -->
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="hibernate.use_sql_comments" value="true" />
            <!-- 애플리케이션 실행 시점에 데이터베이스 테이블을 자동으로 생성 (참고하는 정도로만 사용)-->
            <property name="hibernate.hbm2ddl.auto" value="update" />
            <!--
                create: 기존 테이블 삭제 후 새로 생성한다. drop + create
                create-drop: create 속성에 추가로 애플리케이션을 종료할 때 생성한 DDL을 제거한다. drop + create + drop
                update: 데이터베이스 테이블과 엔티티 매핑정보를 비교해서 변경사항만 수정한다.
                validate: 데이터베이스 테이블과 엔티티 매핑정보를 비교해서 차이가 있으면 경고를 남기고 애플리케이션을 실행하지 않는다. (DDL 수정 없음)
                none: 자동생성기능을 사용하지 않을때, 이 hibernate.hbm2ddl.auto 속성을 삭제하거나 none의 유효하지 않은 옵션값을 주면 된다.
            -->
            <!-- 테이블명이나 컬럼명이 생략되면 자바 카멜표기법을 언더스코어표기법으로 매핑 -->
            <property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy" />
            <!-- 키 생성전략 사용 -->
            <property name="hibernate.id.new_generator_mappings" value="true"/>

        </properties>
    </persistence-unit>

</persistence>
